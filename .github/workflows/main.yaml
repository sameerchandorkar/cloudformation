name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}" >> $GITHUB_ENV

      - name: Check Stack Existence
        id: check-stack
        run: |
          stack_status=$(aws cloudformation describe-stacks --stack-name ec2-bastian --query "Stacks[0].StackStatus" --output text 2>/dev/null || echo "NOT_EXIST")
          echo "Stack Status: $stack_status"
          echo "::set-output name=stack_status::$stack_status"

      - name: Deploy or Update CloudFormation Stack
        run: |
          if [[ "${{ steps.check-stack.outputs.stack_status }}" == "NOT_EXIST" ]]; then
            echo "Creating CloudFormation stack..."
            aws cloudformation create-stack --template-body file://vpc-bastian-ec2.yaml --stack-name ec2-bastian --capabilities CAPABILITY_IAM --region $AWS_DEFAULT_REGION
          elif [[ "${{ steps.check-stack.outputs.stack_status }}" == "CREATE_COMPLETE" || "${{ steps.check-stack.outputs.stack_status }}" == "UPDATE_COMPLETE" ]]; then
            echo "Stack already exists, updating if needed..."
            aws cloudformation deploy --template-file vpc-bastian-ec2.yaml --stack-name ec2-bastian --capabilities CAPABILITY_IAM --region $AWS_DEFAULT_REGION
          else
            echo "Unexpected stack status: ${{ steps.check-stack.outputs.stack_status }}"
            exit 1
          fi
